Home: "主页"
Download: "下载"
Start: "入门"
Reference: "参考文献"
Libraries: "程式库"
Learn: "学习"
Examples: "范例"
Books: "书籍"
Community: "社群"
Contribute: "贡献"
Forum: "论坛"
Showcase: "Showcase"

footer1: "p5.js 的原作者为"
footer2: "并在"
footer3: "和"
footer4: "的支持下由其合作社群所开发。形象及平面设计"

tagline1: "Processing 的趣味结合 JavaScript 的俏皮"
tagline2: "Processing 的简易性结合 JavaScript 的灵活性"
tagline3: "Processing 的直觉结合 JavaScript 的力量"
tagline4: "Processing 的创意结合 JavaScript 的活跃性"
tagline5: "Processing 的社群结合 JavaScript 的社群"
tagline6: "Processing 的力量结合 JavaScript 的范围"

home:
  Download: "下载"
  Start: "入门"
  Reference: "参考文献"
  Libraries: "程式库"
  Learn: "学习"
  Community: "社群"
  p1x1: "你好！p5.js 是个 Javascript 程式库，它起源于"
  p1x2: "的原旨：让艺术家、设计师、教育家和初学者能更容易学习及使用程序设计，同时将其重新释义给今日的网络环境。"
  p2x1: "借着 Processing 原有的绘图册比喻，p5.js 提供全套绘图功能，但除了原有的画布，整个浏览器页面也能成为您绘图的一部分！为此，p5.js 同时提供一系列附加"
  libraries: "程式库"
  p2x2: "以方便与 HTML5 物件"
  interact: "互动"
  p2x3: "，其中包括文字、输入、影像、网络摄像头、声音等。"
  p3x1: "p5.js 是个全新的诠释，而不是个仿拟环境或代码移植，同时它也正被持续要发中。"
  p3x2: "您可以在全新的 p5.js Web Editor 尝试使用！"
  sketch_by: "作者"
  sketch_info: "Homepage sketch adapted from work by 9th grader Grace Obergfell"
  sketch_info_link: "CC Fest NYC on June 8, a free and inclusive coding event for students and teachers"

copyright:
  copyright1: "p5.js 编程库是个免费开源的软件；您可以在 Free Software Foundation 的"
  copyright2: " 2.1版条款下分布及/或修改该软件。"
  copyright3: "参考文献是在"
  copyright4: "许可下允许任何人重用该文献只要该用处为非商业化及原作者有被归功。"

get started:
  get-started-title: "入门"
  get-started1: "本页面将引导您设置一个 p5.js 项目并制作您第一个 sketch。"
  get-started2: "如果您想要使用全新的 "
  get-started3: "p5.js Web Editor"
  get-started4: " 开始的话，您可以跳到"
  get-started5: "您的第一个绘图"
  download-title: "下载及文件格局"
  download1: "最简易的起点是使用"
  download2: "p5.js 完整版"
  download3: "下载所提供的空白范例。"
  download4: "查看 index.html 您可以发现其中有个 p5.js 的链接。如果您想要使用极简化的档案（以加速网页加载的速度），将链接档案名改为 p5.min.js"
  download5: "另外，您也可以选择链接去网络上的 p5.js 文档。所有 p5.js 版本都被上载到多个 CDN (Content Delivery Network) 上，您可在此链接参考所有 p5.js 版本："
  download6: "。接下来您只需要将链接改为："
  download7: "一个极简但完整的 HTML 档案如下："
  download8: "您也可以使用以下来自"
  download9: "的模版。"
  environment-title: "编程环境"
  environment1: "您可以使用任何"
  environmentlink: "https://zh.wikipedia.org/wiki/%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%BE%91%E5%99%A8"
  environment2: "代码编程器"
  environment3: "。以下为设置"
  environment4: "的步骤。其他不错的代码编程器包括"
  environment5: "和"
  environment6: "如果您使用荧幕阅读器但不使用 p5 web editor，您可考虑使用 "
  environment7: " 或 "
  environment8: "开启 Sublime。选择 File 目录项目然后选择 Open... 接着在对话框中选择含有您的 .html 及 .js 档案的文件夹。在窗口左边的文件栏您应该能看到文件夹的名字在最上方而往下都是该文件夹里面所含的档案。"
  environment9: "点击 sketch.js 档案即会在右边开启该档案，您也能在这时更改该档案。"
  environment10: "p5 starter code opened up in sublime editor."
  environment11: "在文件浏览器内双击 index.html 以在您的网页浏览器内开启该档案，或您也可以直接在网页浏览器内的网址栏输入："
  environment12: "file:///html文件在硬盘上的位置/"
  environment13: "以查看您的绘图。"
  your-first-sketch-title: "您的第一个绘图"
  your-first-sketch-intro1: "如果您使用过 Processing，可参考"
  your-first-sketch-intro2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  your-first-sketch-intro3: "Processing 过度教程（英文页面）"
  your-first-sketch-intro4: "在代码编程器内输入："
  your-first-sketch2: "这一行代码表示〝在离左边 50 像素及里上边 50 像素的位置画个高度和阔度都为 80 像素的椭圆形〞。"
  your-first-sketch3: "保存该绘图的档案并刷新您浏览器的页面，这时如果您成功输入以上范例，您会在浏览器内看到如下页面："
  your-first-sketch4: "请注意：如果您使用荧幕阅读器，您需要在 p5 网上编辑器内开启无障碍输出（accessible outputs），或不使用该编辑器的话您则需要在您的 HTML 文件内添加无障碍程式库。以了解更多关于"
  your-first-sketch5: "使用 p5 及荧幕阅读器的相关资讯请点击这里"
  your-first-sketch6: "，而如果您想知道更多关于"
  your-first-sketch7: "无障碍编程程式库请点击这里。"
  your-first-sketch8: "画布上 x 坐标 80 及 y 坐标 80 的位置上有个宽度及高度都为 50 的圆形"
  your-first-sketch9: "如果您没看见任何东西，这可能表示在输入代码时出现了错误。这时您需要确保您所输入的代码和以上范例完全相同无误：数字必须被输入在括号内，他们之间也该由逗号分开，而行列尾端也该有个分号。"
  your-first-sketch10: "刚起步编程其中一个比较难的部分是您必须非常注意编程语言的语法，网页浏览器通常没办法猜出您想要表达的意思并时常会挑剔编程码标点符号的位置。只要多加练习您自然也会习惯该语法。取决于您使用的网页浏览器，您能开启 JavaScript \"console\"（控制台）查看错误信息。比如说 Chrome 您能在 View > Developer > JavaScript Console 目录项目中开启控制台。"
  your-first-sketch11: "接下来，我们可以编写一个更有趣的绘图。删除上一个范例的所有代码然后输入以下："
  your-first-sketch12: "这程式会制作一个 640 像素宽 480 像素高的画布，然后在鼠标的位置画白色圆圈。当您按下滑鼠按钮时，圆圈将会变为黑色。现在您可以试着移动滑鼠及点击滑鼠按钮。"
  your-first-sketch13: "画布上有多个沿着鼠标移动路径画出的圆形"
  what-next-title: "下一步"
  processing-transition1: "参阅"
  processing-transition2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  processing-transition3: "Processing 过度教程（英文页面）"
  processing-transition4: "以了解如何将 Processing 绘图转换为 p5.js 绘图以及它们之间的差别。"
  reference1: "查看"
  reference2: "参考文献"
  reference3: "以更深入了解各个功能。"
  learn1: "浏览"
  learn2: "学习"
  learn3: "及"
  learn4: "范例"
  learn5: "页面以了解更多。"
  learn6: "如果您想要将 p5 及荧幕阅读器一起使用，您可以参考"
  learn7: "p5 及荧幕阅读器教程"
  book1: "这教程一部分源自于《 Getting Started with p5.js 》，作者为 Lauren McCarthy、Casey Reas 及 Ben Fry， O'Reilly / Make 2015。著作权"
  book2: 2015 Lauren McCarthy、Casey Reas 及 Ben Fry。版权所有。

download:
  Download: "下载"
  complete-library-title: "完整程式库"
  p5.js-complete: "p5.js 完整版"
  includes-1: "包含"
  includes-2: "p5.js、p5.dom.js、p5.sound.js 及空白范例"
  includes-3: "版本"
  single-files-title: "单一文件"
  single-file: "单一文件："
  p5.js-uncompressed: "易读版本"
  compressed: "极简化版本"
  link: "链接："
  statically-hosted-file: "静态链接文件"
  editor-title: "Editor"
  p5.js-editor: "p5.js Web Editor"
  editor-includes: "使用 p5.js Web Editor 开始编写程式，不需要任何另外的设置！"
  etc-title: "其他"
  older-releases: "旧版本/更新日志"
  report-bugs: "报告缺陷"
  supported-browsers: "浏览器支持"
  support-title: "支持 p5.js!"
  support-1: "p5.js 是个免费及开源的软件。我们想要使我们的社群尽可能开放及包容。您能成为 Processing Foundation 的"
  support-2: "会员"
  support-3: "以帮我助们的工作，您能以个人、工作室或教育机构的身份参与。您也能单"
  support-4: "捐款"
  support-5: "而不需要成为会员。"
  support-6: "个人"
  support-7: "$25"
  support-8: "工作室"
  support-9: "$250"
  support-10: "教育机构"
  support-11: "$5/学生或 $500"
  support-12: "您的会员籍将帮助软件开发（支持 p5.js、Processing.py、Processing 给 Android 与 ARM 设备、教育资源如编程范例与教程、"
  support-13: "奖学金"
  support-14: "及"
  support-15: "社群活动）"
  support-16: "。我们需要您的帮助！"
  support-17: "p5.js 贡献者会议在匹兹堡的 CMU STUDIO for Creative Inquiry 举行（图像由：Taeyoon Choi）"
  support-18: "Processing Fellow Saskia Freeke 在伦敦组织的 Code Liberation x Processing （代码解放 x Processing）研讨会（图像由：Code Liberation Foundation）"
  support-19: "SFPC主持的 “学习如何教导，教导如何学习” 会议（图像由Kira Simon-Kennedy）"
  support-20: "Processing Foundation Fellow Cassie Tarakajian 在 Code Art Miami 组织的研讨会（图像由：Christian Arévalo Photography）"
  support-21: "Taeyoon Choi 及 ASL（美式手语）翻译员在 Signing Coders p5.js（p5.js 手语编程员）研讨会（图像由：Taeyoon Choi）"
  support-22: "Google Summer of Code（Google 夏日程式码大赛）开幕（图像由：Taeyoon Choi）"
  support-23: "Processing Foundation Fellow Cassie Tarakajian 在 Code Art Miami 组织的研讨会（图像由：Christian Arévalo Photography）"
  support-24: "Luisa Pereira 及 Yeseul Song 帮助举办一个手语为主的 p5.js 研讨会，由 Taeyoon Choi 带领（图像由：Taeyoon Choi）"
  support-25: "p5.js 贡献者会议在匹兹堡的 CMU STUDIO for Creative Inquiry 举行（图像由：Taeyoon Choi）"
  support-26: "Processing Fellow Digital Citizens Lab 在 International Center of Photography 所主持的 STEM（科学、科技、工程、数学）教学小组（图像由：International Center of Photography）"
  support-27: "在智利圣地亚哥的 p5.js 研讨会的参与者，由 Aarón Montoya-Moraga 带领（图像由：Aarón Montoya-Moraga）"
  support-28: "Claire Kearney-Volpe 帮助举办一个手语为主的 p5.js 研讨会，由 Taeyoon Choi 带领（图像由：Taeyoon Choi）"
  support-29: "Processing Foundation Fellow DIY Girls 在洛杉矶举办的创意编程课程（图像由：DIY Girls）"
  support-30: "Processing Fellow Digital Citizens Lab"
  support-31: "UCLA DMA 及 NYU ITP 的 p5.js 聚会"
  support-32: "Processing Foundation"
  support-33: "在原本的 Processing 软件多过十年的工作后成立于 2012 年。Processing Foundation 原旨为提升视觉艺术界的软件素养及提升科技界的视觉素养 — 并让这些领域更加接近不同的社群。我们的目标是赋予来自不同兴趣及背景的人学习编程与用编程制作创意作品的权利，尤其是那些可能无法得到这些工具及资源的人。"

learn:
  learn-title: "学习"
  learn1: "以下教程将提供更多深入及详细的步骤，专注于特定的主题。请参考"
  learn2: "范例页面"
  learn3: "以查看 p5.js 多种功能的简单范例。"
  introduction-to-p5js-title: "p5.js 简介"
  hello-p5js-title: "Hello p5.js"
  hello-p5js: "This short video will introduce you to the library and what you can do with it."
  getting-started-title: "入门简介"
  getting-started: "欢迎来到 p5.js！<br>这简介将涵盖 p5.js 的基本设置。"
  p5js-overview-title: "一览 p5.js"
  p5js-overview: "p5.js 主要功能的介绍"
  p5js-processing-title: "p5.js 及 Processing"
  p5js-processing: "两者之间的差别及如何将两者之间互相转换。"
  p5-screen-reader-title: "p5 及荧幕阅读器"
  p5-screen-reader: "设置 p5 以让它可以和荧幕阅读器一起使用。（英文内文）"
  using-local-server-title: "本地伺服器"
  using-local-server: "如何在 Mac OSX、Windows 或 Linux 上设置本地伺服器。"
  connecting-p5js-title: "链接 p5.js"
  creating-libraries-title: "制作程式库"
  creating-libraries: "制作 p5.js 附加程式库。"
  nodejs-and-socketio-title: "node.js 及 socket.io"
  nodejs-and-socketio: "链接 node.js 伺服器及 p5.js，通过 socket.io 通讯。"
  programming-topics-title: "编程问题"
  beyond-the-canvas-title: "画布之外"
  beyond-the-canvas: "创建及控制画布以外的元素。"
  3d-webgl-title: "3D/WebGL"
  3d-webgl: "使用 p5.js WebGL 模式制作高级图形程式。"
  color-title: "颜色"
  color: "数码颜色的简介。"
  coordinate-system-and-shapes-title: "坐标系统与图形"
  coordinate-system-and-shapes: "利用坐标系统绘制简单图形。"
  interactivity-title: "互动性"
  interactivity: "鼠标与键盘的互动简介。"
  program-flow-title: "程序流程"
  program-flow: "p5.js 控制程序流程简介。"
  curves-title: "曲线"
  curves: "介绍 p5.js 中的三种曲线：弧形，样条曲线和 Bézier 曲线。"
  becoming-a-better-programmer-title: "成为更好的程式设计师"
  debugging-title: "调试"
  debugging: "调试程序的简介。"
  optimizing-title: "优化 p5.js 程式"
  optimizing: "此教程包含技巧及窍门以进一步优化您的程式，使它执行得更快更顺畅。"
  test-driven-development-title: "单元测试及测试驱动开发"
  test-driven-development: "避免安装时不必要的烦恼。什么是单元测试？如何使用单元测试？作者 Andy Timmons。"
  contributing-to-the-community-title: "回馈社群"
  development-title: "开发"
  development: "开发设置简介及一览。"
  looking-inside-title: "窥看 p5"
  looking-inside: "一个简单易懂的教程，当中含括了 p5.js 源代码的文件格局及开发工具，作者 Luisa Pereira。"
  writing-tutorial-title: "编写教程"
  writing-tutorial: "编写 p5.js 教程的指南。"
  writing-a-tutorial-title: "p5.js 回馈指南"
  writing-a-tutorial-author: "教程作者为 Tega Brain。"
  writing-a-tutorial-1: "我们欢迎教育家、合作者和一般爱好者开发更多 p5.js 教程。p5.js 旨在让创意编程及开源软件开发更易接近及吸引更多元化的社群，同时我们也很高兴能够公开的发布 p5.js 开发的完整过程及教程。我们现有的教程含括了各种课题如：学习使用 p5.js、编程技巧及如何帮助开发开源项目。"
  writing-a-tutorial-2: "我们欢迎任何人提交全新教程，这份指南将包括新教程的提议、准备和提交的所需步骤。"
  writing-a-tutorial-how-start-title: "如何开始："
  writing-a-tutorial-how-start-1: "先确定您所建议的课题尚未被涵盖，在此链接有"
  writing-a-tutorial-how-start-2: "一个列表"
  writing-a-tutorial-how-start-3: "列出了正在进行中的教程。如果您想开发的课题被列为正在进行中 (in progress)，您或许能帮助完成该项目或为现有的项目做预备发布的工作，您只需联络我们。"
  writing-a-tutorial-how-start-4: "如果您的课题尚未被涵盖及尚未被列为正在进行中，请寄份电子邮件去 education@p5js.org 并简略的讲述您所建议的教程。"
  writing-a-tutorial-how-prepare-title: "如何准备网上 p5.js 教程："
  writing-a-tutorial-how-prepare-1: "当您以准备发布您的教程，请按着以下步骤准备您的教程给 p5.js 的网页。"
  writing-a-tutorial-how-prepare-2: "将您的教程写在一个命名为 tutorial-name.hbs 的文件并跟从"
  writing-a-tutorial-how-prepare-3: "这基本结构"
  writing-a-tutorial-how-prepare-4: "。如该文件所示，它必须有以下开端："
  writing-a-tutorial-how-prepare-5: "您的教程文件夹将被置放在 p5.js 网站一个命名为“tutorials”的文件夹内。index.hbs 是"
  writing-a-tutorial-how-prepare-6: "p5.js 教程的主页"
  writing-a-tutorial-how-prepare-7: "而 test-tutorial.hbs 为空白范例教程。"
  writing-a-tutorial-how-prepare-8: "所有内容必须被包含在以下标签内："
  writing-a-tutorial-how-prepare-9: "内容格式可以使用 &lt;h1&gt;、&lt;h2&gt; 及 &lt;p&gt; 段落标签定义，如"
  writing-a-tutorial-how-prepare-10: "空白范例教程所示。"
  writing-a-tutorial-how-prepare-11: "如果您的教程包含图像，它们必须被置放在 p5 网站的 asset 文件夹，该文件夹位于 src/assets/learn/test-tutorial/images 如以下所示。"
  writing-a-tutorial-how-prepare-12: "以在 HTML 页面内格式化您的源代码，请使用以下标签："
  writing-a-tutorial-embedding-title: "嵌入 p5.js 绘图"
  writing-a-tutorial-embedding-1: "使用 p5.js 的一个好处是您可以制作动画驱动、互动性或可编辑的教程，方便更简易的演示程式设计概念。您的范例必须是 p5.js 绘图而它能用以下两种方式嵌入在您的教程中。"
  writing-a-tutorial-embedding-2: "如果该范例需保持可编辑性，如在 p5.js 网站的"
  writing-a-tutorial-embedding-3: "参考文献"
  writing-a-tutorial-embedding-4: "内，该 p5 绘图必须使用 p5.js 部件以嵌入在 HTML 页面内，请使用"
  writing-a-tutorial-embedding-5: "这指南"
  writing-a-tutorial-embedding-6: "以了解如何使用该部件嵌入 p5.js 绘图，部件作者为"
  writing-a-tutorial-embedding-7: "。您也可以在"
  writing-a-tutorial-embedding-8: "空白范例教程内"
  writing-a-tutorial-embedding-9: "查看使用范例。"
  writing-a-tutorial-embedding-10: "如果该范例必须是动画驱动或互动性的但并不需要是可编辑的，该 p5.js 绘图需使用 iframe 以嵌入在页面内，如以下所示。"
  writing-a-tutorial-iframe-title: "使用 iframe 嵌入 p5 绘图"
  writing-a-tutorial-iframe-1: "iframe 让您能在原有的页面上开启一个通往另一个页面的窗口，同时该页面并不能直接和原有页面互动。在此例， 原有页面内会被嵌入一个含有您 p5.js 绘图的 index.html 窗口。"
  writing-a-tutorial-iframe-2: "在 /src/assets/learn 文件夹内，将您的 p5 绘图置放在一个命名为您的绘图名的文件夹内如以下截图所示。这文件夹是您置放所有 iframe 内将使用的图像及 p5 绘图的地方。"
  writing-a-tutorial-iframe-3: "在含有您的 p5 范例的子文件夹内应该含有一个 sketch.js 文件及一个 embed.html 文件。"
  writing-a-tutorial-iframe-4: "请确保 embed.html 内的 p5 程式库有正确的链接。如果您的文件结构和以上相同，p5.js 程式库的链接将会是 \"../../../js/p5.min.js\"。"
  writing-a-tutorial-iframe-5: "这时你可以将 p5.js 绘图文件以 iframe 的方式嵌入在您的教程的 .hbs 文件中。iframe 嵌入代码如下："
  writing-a-tutorial-iframe-6: "以格式化 iframe，您可以将以下包括在文件内或使用样式表："
  writing-a-tutorial-iframe-7: "在以下链接您可以直接查看绘图："
  writing-a-tutorial-iframe-8: "而在以下您可以查看绘图被嵌入在 p5 网页中："
  writing-a-tutorial-iframe-9: "还有一项您需要注意的是您必须设置 iframe 的大小，以确保其大小不会随着窗口大小而改变。"
  writing-a-tutorial-iframe-10: "另外，p5.js 程式库的文件链接并不是在 .eps 文件内（如其他教程），而是在您的 HTML 页面内（通常是 embed.html）。"
  writing-a-tutorial-iframe-11: "更多关于嵌入 p5.js 绘图的信息可在"
  writing-a-tutorial-embed-iframe-12: "以下链接查找。"
  writing-a-tutorial-finishing-title: "结束"
  writing-a-tutorial-finishing-1: "一旦您完成编辑您的教程并且您的教程已经被许可，分叉 p5.js 网站的代码库，如以上所示的步骤准备您的教程然后开启一个 pull request 给 p5.js 网站的代码库以便我们能发布您的教程！"
  writing-a-tutorial-finishing-2: "谢谢！"
  color-description1: "以下教程来自于由 Daniel Shiffman 篇写的《 Learning Processing 》（原文英文），并由 Morgan Kaufmann 出版，© 2008 Elsevier Inc。版权所有。此教程由 Kelly Chang 移植成 P5 代码。如果您发现任何错误或有任何评论，"
  color-description2: "请联络我们。"
  color-title: "颜色"
  color-p1x1: "在数码世界中，当我们要介绍一个颜色时，我们需要有一定的精确度。单纯说“嘿，你能把那圆形变成蓝绿色吗？”并不足够。在这，颜色可以被定义为在一个范围内的数字。让我们从最简单的范例开始：黑白色或灰渐色。0 为纯黑色，255 为纯白色。在两者之间任何数字 – 50、87、162、209 等等 – 都是介于黑与白之间的灰色。"
  color-p2x1: "只要在任何东西被画在画布上之前使用 "
  color-p2x2: " 及 "
  color-p2x3: " 函数，我们能设置任何图形的颜色。我们也能使用 "
  color-p2x4: " 函数来设定窗口的背景颜色。如下范例。"
  color-code1: "background(255);    // 设置背景颜色为白色 \n stroke(0);          // 设置外线颜色为黑色 \n fill(150);          // 设置填充色为灰色 \n rect(50,50,75,100); // 绘制四方形"
  color-p3x1: "使用 "
  color-p3x2: " 及 "
  color-p3x3: "函数将会分别去除外线色灰填充色。我们直觉上可能会以为“ stroke(0) ”表示没有外线，可是我们必须记得 0 在这并不代表“无”，然而是代表黑色。此外，我们必须记得不要同时去除 "
  color-p3x4: " 及 "
  color-p3x5: " 不然不会有任何图形出现在画布上！"
  color-p4x1: "以此同时，如果我们绘制两个图形，p5.js 将会使用最近（代码内从上至下）所定义的外线色及填充色值。"
  color-rgb-title: "RGB 颜色值"
  color-rgb-p1x1: "您还记得手指绘画吗？选择混合三原色，我们能混合出任何颜色。同时混合所有颜色的结果是个浑浊的褐色。添加越多颜料，给颜色将会变得更暗。数码颜色也是使用三原色的混合来构造新的颜色的，但是它和颜料的混合原理不一样。首先，其原色为：红、绿、蓝（也为 RGB 颜色，Red、Green、Blue）。而当您在混合荧幕上的颜色时，您将混合的是光而不是颜料，因此它的混合原理并不一样。"
  color-rgb-li1: "红 + 绿 = 黄"
  color-rgb-li2: "红 + 蓝 = 紫"
  color-rgb-li3: "绿 + 蓝 = 青（蓝绿色）"
  color-rgb-li4: "红 + 绿 + 蓝 = 白"
  color-rgb-li5: "无色 = 黑"
  color-rgb-p2x1: "这假设所有色颜色都为最亮的亮度，但是您也能同时使用一系列的颜色值，因此一些红加上一些绿再加上一些蓝将等于灰，而一点红加上一点蓝将等于深紫色。虽然这可能需要一点时间来习惯，随着您编程及使用 RGB 颜色值来试验的经验越多，您会对它越熟悉，就如使用您的手指来混合颜色一样。当然您不能单纯说“混合一些红与一点蓝”，您必须提供确切的数值。就如灰渐值，个别颜色的值也是由介于 0（不使用任何该颜色）与 255（完全使用该颜色）之间，而他们的顺序为红（R）、绿（G）及蓝（B）。通过更多的试验您将会对 RGB 颜色更加熟悉，不过接下来我们将介绍一些使用常用颜色的代码。"
  color-transparency-title: "颜色透明度"
  color-transparency-p1x1: "除了个别颜色的红、绿、蓝值之外，我们也能提供多一个可选性的值，此值被称为该颜色的 “alpha” 值。Alpha 代表透明度，当您要绘制多个重叠部分透视的图形时，透明度在这就特别有用。一个图像的 alpha 值有时也会被称为该图像的 “alpha channel”。"
  color-transparency-p2x1: "我们必须记得像素并不是真的透明的，这单纯是个使用混合颜色所达成的便利错觉。p5.js 在幕后将会使用该颜色的数值再加上一定百分率的另外一个颜色，创作出混合颜色的视觉错觉。（如果您有兴趣编程一个“粉色镜片”，您可以从这开始。）"
  color-transparency-p3x1: "Alpha 值也是介于 0 与 255 之间，0 代表完全透明而 255 代表完全不透明。"
  color-custom-ranges-title: "自定义颜色值范围"
  color-custom-ranges-p1x1: "介于 0 与 255 之间的 RGB 颜色值并不是 p5.js 唯一定义颜色的方法，事实上，我们能使用多种方法来定义颜色。比如说，您可能比较偏向于使用 0 至 100（如百分比）来定义颜色。为此您可以使用 "
  color-custom-ranges-p2x1: "以上函数表示：“OK，我们要使用红、绿、蓝值来定义颜色。而他们的值将介于 0 至 100 之间。"
  color-custom-ranges-p3x1: "虽然一般上这么做不会提供任何便利，您可以为个别颜色值提供不同的数值范围："
  color-custom-ranges-p4x1: "这时此函数表示：“红色值将会是介于 0 至 100 之间，绿色值将会是介于 0 至 500 之间，蓝色值将会是介于 0 至 10 之间，而 alpha 至将会是介于 0 至 255 之间。"
  color-custom-ranges-p5x1: "最后，虽然您通常在编程时只需要用到 RGB 色值，您也能使用 HSB（色调、饱和度及亮度）模式来定义颜色。简单来说，HSB 色值使用方法如下："
  color-custom-ranges-li1x1: "色调"
  color-custom-ranges-li1x2: "—色调值，默认上介于 0 至 255 之间。"
  color-custom-ranges-li2x1: "饱和度"
  color-custom-ranges-li2x2: "—该颜色的饱和度，默认上介于 0 至 255 之间。"
  color-custom-ranges-li3x1: "亮度"
  color-custom-ranges-li3x2: "—该颜色的亮度，默认上介于 0 至 255 之间。"
  color-custom-ranges-p6x1: "使用函数 "
  color-custom-ranges-p6x2: " 您就能设定您自选的数字范围。有些人会比较偏好使用介于 0 至 360 之间的数值来定义色调（就如色轮的 360 度一样）及 0 至 100 之间的数值来定义饱和度及亮度（介于 0% 至 100%）。"
  coordinate-system-description1: "以下教程来自于由 Daniel Shiffman 篇写的《 "
  coordinate-system-description2: "Learning Processing"
  coordinate-system-description3: " 》（原文英文），并由 Morgan Kaufmann 出版，© 2008 Elsevier Inc。版权所有。此教程由移植成 P5 代码。如果您发现任何错误或有任何评论，"
  coordinate-system-description4: "请联络我们"
  coordinate-system-description5: "。"
  coordinate-system-description-title: "坐标系统及图形"
  coordinate-system-description-p1x1: "在我们开始使用 p5 编程前，我们得先回到我们初中二时的记忆，找出一张坐标纸并画一条直线。两点之间最短的距离正是一条直线，我们将使用坐标纸上的直线的两点作为起点。"
  coordinate-system-description-p2x1: "以上图解显示一条介于点 A (1,0) 及点 B (4,5) 的直线。如果您想要指示您的朋友画出一样的直线，您或许会对他说：“请从点一、零开始画一条直线去点四、五”。 那么现在暂时想象您的朋友是个电脑而您想要指示这位数码朋友如何画在荧幕上出一样的直线。这情况下您也能使用一样的指示（只不过现在您可以跳过任何客气话但是必须使用精准的格式来表达）。该指示将会是如下："
  coordinate-system-description-p3x1: "就算您还没学习过编写程式的语法，以上的语句应该仍然多少都能理解。我们提供电脑一个指令（我们称这指令为 function 或函数）以让其画出直线（line）。此外，我们也提供一些用于定义该直线的参数：从点 A (1,0) 至点 B (4,5)。 如果您假想这行代码为一个句子，这函数就是个动词而参数就是宾语。这代码句子使用分号作为句尾符号而不是句号。"
  coordinate-system-description-p4x1: "这里关键是了解电脑屏幕就只是个比较花俏的坐标纸。荧幕上每一个像素都代表着一个坐标 - 或两个数字：“x”（横向）及 “y”（纵向）- 代表着在空间内一点的位置。而我们的工作就是指定该在这些像素坐标位置出现的图形及颜色。"
  coordinate-system-description-p5x1: "不过，这里有个需要注意的东西。那张来自初中二的坐标纸（使用笛卡尔坐标系）将 (0,0) 放置在正中央，y 轴由下至上 x 轴由左至右。但是电脑窗口的坐标系在 y 轴的方向是相反的。(0,0) 被定义在左上角并往右边及往下延伸。"
  coordinate-system-simple-shapes-title: "基本图形"
  coordinate-system-simple-shapes-p1x1: "大多数使用 p5 的编程范例一般都会使视觉上的绘图范例。本质上，这些范例都和绘制图形及设定像素有关。我们将从绘制四种基本图形开始。"
  coordinate-system-simple-shapes-p2x1: "针对每个形状，我们需要问我们需要什么资料才可以定义该图形的位置及大小（更之后其颜色）然后再了解 p5 如何接收这些信息。在以下的绘图内，我们将使用一个宽度为 100 像素及高度为 100 像素的画布。"
  coordinate-system-simple-shapes-p3x1: ""
  coordinate-system-simple-shapes-p3x2: " （点）是最简单的图形同时也是个不错的起点。以绘制一个点（point），我们只需要提供 x 及 y 坐标。"
  coordinate-system-simple-shapes-p4x1: ""
  coordinate-system-simple-shapes-p4x2: " （直线）也不会特别困难，我们只需提供两个点 (x1,y1) 及 (x2,y2)："
  coordinate-system-simple-shapes-p5x1: "当我们想要绘制一个 "
  coordinate-system-simple-shapes-p5x2: " （四方形）时，这就会变得比较复杂一点。在 p5 内，一个四方形是由其左上角的坐标点与其宽度及高度来定义的。"
  coordinate-system-simple-shapes-p6x1: "第二个绘制四方形的方法是定义其中心点的位置，然后定义其宽度及高度。如果我们想要使用这方法，我们必须先表示我们要使用 "
  coordinate-system-simple-shapes-p6x2: " 模式然后才输入绘制四方形的指示。请注意 p5 有区分大小写字母。"
  coordinate-system-simple-shapes-p7x1: "最后我们也能使用两个点来绘制一个四方形（分别定义左上角及右下角）。这模式为 "
  coordinate-system-simple-shapes-p7x2: "。请注意这范例在荧幕上显示的结果和上方的范例一样。"
  coordinate-system-simple-shapes-p8x1: "当我们对于绘制一个四方形有了不错的掌握时，绘制一个 "
  coordinate-system-simple-shapes-p8x2: " （椭圆形）可是轻而易举。事实上，它和绘制 "
  coordinate-system-simple-shapes-p8x3: " （四方形）一样，唯一不同的是椭圆形将会被绘制在所定义的四方形内。"
  coordinate-system-simple-shapes-p8x4: " 的默认模式为 "
  coordinate-system-simple-shapes-p8x5: " 而不是 "
  coordinate-system-simple-shapes-p8x6: "。"
  coordinate-system-simple-shapes-p9x1: "现在让我们来看看一些使用更实际绘图设置的程式代码。我们将使用一个大小为 200 乘 200 的画布大小。请注意我们这里使用的 createCanvas() 函数内所设定的画布高度及宽度。"

test-tutorial:

libraries:
  Libraries: "程式库"
  p5.dom: "p5.dom 让您在画布以外与 HTML5 物件互动，这包括视屏、音频、摄像头、输入框及文字。"
  p5.sound: "p5.sound 使用 Web Audio 扩展 p5 的功能，提供音频输入、播放、分析及合成功能。"
  p5.accessibility: "p5.accessibility makes the p5 canvas more accessible to people who are blind and visually impaired."
  Contributed: "社群贡献程式库"
  asciiart: "p5.asciiart is a simple and easy to use image - to - ASCII art converter for p5js. Created by "
  p5.ble: "A Javascript library that enables communication between BLE devices and p5 sketches. Created by "
  p5.bots: "p5.bots 让您通过网页浏览器和 Arduino（或其他微处理器）互动。您可以使用传感器资料来驱动绘图会使用绘图来驱动 LED、马达等等！作者为"
  p5.clickable: "Event driven, easy-to-use button library for p5.js."
  p5.collide2D: "p5.collide2D 提供一系列工具适用于计算在 p5.js 内的 2D 几何形状的碰撞检测。作者为"
  p5.createloop: "Create animation loops with noise and GIF exports in one line of code."
  p5.dimensions1: "p5.dimensions 扩展 p5.js 的向量功能以包括更高维数的计算。作者为"
  p5.dimensions2: "及"
  p5.experience: "Extensive library for p5.js that adds additional event-listening functionality for creating canvas-based web applications. Created by "
  p5.func: "p5.func 是个提供新物件及时间、频率和空间函数操作的 p5 扩展程式库。作者为"
  p5.geolocation: "p5.geolocation 提供给 p5.js 获取、观察、计算使用者地理位置及地理围栏的功能。作者为"
  p5.gibber: "p5.gibber 提供快速音乐排序及音频合成功能。作者为"
  grafica.js: "grafica.js 让您在您的 p5.js 绘图中添加简单但高度可配置的 2D 图表。作者为"
  p5.gui: "p5.gui 提供您的 p5.js 绘图一系列图形用户界面。作者为"
  mappa: "Mappa 提供一系列给静态地图、重叠地图及地理数据的工具。特别适用于制作使用地理位置的应用程式。作者为"
  p5.particle: "Particle 及 Fountain 物件可以用以制作数据驱动效果，该数据可来自使用者互动或 JSON 文件。作者为"
  p5.play: "p5.play 提供图像、动画、输入及碰撞检测功能以方便制作游戏或游戏类程式。作者为"
  rita.js: "RiTa.js 提供语言分析功能并也提供生成文字的功能。作者为"
  p5.scenemanager: "p5.SceneManager 帮助您制作有多个状态/场景的绘图。各个场景就比如一个在主要绘图内的绘图。作者为"
  p5.scribble: "绘制看起来粗略的 2D 形状作者为 Janneck Wullschleger，Processing 原有程式库的代码移植。"
  p5.serial1: "p5.serial 让不同设备使用串联通讯 (RS-232) 与在网页浏览器内的 p5 绘图沟通。作者为"
  p5.serial2: "，并包括以下作者的贡献："
  p5.serial3: "及"
  p5.speech: "p5.speech 提供简单易用的 Web Speech 及语音识别的 API，使制作能说能听的绘图更加容易。作者为"
  p5.tiledmap1: "p5.tiledmap 提供绘制及便利功能以在绘图中加入由"
  p5.tiledmap2: "制作的地图。作者为"
  vida: "Vida is a simple library that adds camera (or video) based motion detection and blob tracking functionality to p5js. Created by "
  p5.voronoi: "p5.voronoi 提供您的 p5.js 绘图一系列用以绘制及使用 voronoi 图的工具。"
  p5.3D: "3D Text and Images in WebGL. Created by "
  using-a-library-title: "如何使用程式库"
  using-a-library1: "p5.js 程式库可以是任何扩展或延伸 p5.js 核心功能的 JavaScript 代码，它们主要分为两种。核心程式库（"
  using-a-library2: "及"
  using-a-library3: "）是 p5.js 正式发布组的一部分，而社群贡献程式库是由 p5.js 社群成员持有、开发及维持的。"
  using-a-library4: "如果您想在您的绘图内加入任何附加程式库，您只需在 HTML 文件内添加程式库的链接，此链接必须发生在 p5.js 的链接之后。一个 HTML 范例如下："
  create-your-own-title: "制作附加程式库"
  create-your-own1: "p5.js 欢迎任何人所制作的附加程式库！请参考"
  create-your-own2: "程式库编辑教程（英文页面）"
  create-your-own3: "以了解更多关于如何制作附加程式库的步骤。"
  create-your-own4: "If you have created a library and would like to have it included on this page, submit this form!"

community:
  community-title: "社群"
  community-statement-title: "p5.js 社群宣言"
  community-statement1: "p5.js 是个对探索使用科技创作艺术及设计感兴趣的社群。"
  community-statement2: "我们声援及支持所有人，不论他们来自不同性别认同、性取向、种族、国籍、语言、神经型、大小、能力、阶级、宗教、文化、次文化、政治观点、年龄、技能等级、职业或背景。我们了解并不是所有人都有多余的时间、金钱或能力以活跃的参与社群活动但我们同时认可及鼓励各种参与方式。我们致力于促进障碍消除及培养能力。我们都是学习者。"
  community-statement3: "我们喜欢以下井号标签：#noCodeSnobs（因为我们重视社群多过效率）、#newKidLove（因为我们都曾经刚起步）、#unassumeCore（因为我们不假设预有知识）及 #BlackLivesMatter（因为当然）。"
  in-practice-title: "实践："
  in-practice1: "我们不假设预有知识也不隐射有些东西是所有人都应该知道的。"
  in-practice2: "我们坚持积极的回应反馈请求，不论它们有多复杂。"
  in-practice3: "我们欢迎新人并且优先考虑其他人的学习。我们致力于将如新人的热情带入我们的工作，因为我们相信新人和专家对我们来说都一样重要。"
  in-practice4: "我们积极的承认及验证各种不同的贡献。"
  in-practice5: "我们永远都愿意给予帮助或指导。"
  in-times-conflict-title: "在起冲突时："
  in-times-conflict1: "我们聆听。"
  in-times-conflict2: "我们清楚地表达自己同时理解其他人的感受。"
  in-times-conflict3: "如果错在我们，我们承认错误、道歉及为我们的举止负责任。"
  in-times-conflict4: "我们会一直寻求方法以改善我们自己及我们的社群。"
  in-times-conflict5: "我们致力于在我们的社群内保持尊敬及开放性。"
  in-times-conflict6: "我们让所有人都感到他们的意见都有被聆听。"
  in-times-conflict7: "在我们的互动中，我们保持细心及友善。"
  in-the-future-title: "在未来："
  in-the-future1: "未来就是现在。"
  contribute-title: "贡献"
  contribute1: "我们的社群都会一直需要各种不同的帮助。"
  develop-title: "开发。"
  develop1: "GitHub"
  develop2: "是源代码被储存、议题被记录及关于代码的谈论发生的主要地方。请参考"
  develop3: "开发教程"
  develop4: "以开始开发代码或"
  develop5: "制作您的附加程式库。"
  document-title: "文献。"
  document1: "所有人都喜欢参考文献。我们需要帮助"
  document2: "移植范例"
  document3: "、"
  document4: "添加参考文献"
  document5: "及制作教程。"
  teach-title: "教学。"
  teach1: "请参阅 wiki 内的"
  teach2: "学习页面"
  teach3: "以参考过去的课程、研讨会及活动。欢迎添加您的链接！"
  create-title: "制作。"
  create1: "p5.js 在寻找设计师、艺术家、代码编程师等以将您具创意及惊人的作业展示在主页上，同时您的作业也能启发其他人。请将您的作业呈交至"
  create2: "hello@p5js.org"
  create3: "。"
  donate-title: "捐献。"
  donate1: "p5.js 是个免费且开源的软件，由一群艺术家所制作。您可捐赠给"
  donate2: "Processing Foundation"
  donate3: "以帮助支持 p5.js 的开发工作。"
  contributors-conference-title: "贡献者会议"
  contributors-conference1: "在2015年，p5.js 举办了第一次"
  contributors-conference2: "贡献者会议"
  contributors-conference3: "。艺术家、设计师、程式开发员、教育家等等在"
  contributors-conference4: "CMU's Studio for Creative Inquiry"
  contributors-conference5: "聚集以让 p5.js 更加精彩。"
  mailing-list-title: "邮件列表"
  mailing-list-1: "请输入您的电子邮件地址以接收偶尔来自 Processing Foundation 的更新消息。"

books:
  books-title: "书籍"

examples:
  Examples: "范例"
  back-examples: "返回"
  Structure: "结构"
  Form: "形状"
  Data: "资料"
  Arrays: "数组"
  Control: "控制"
  Image: "图像"
  Color: "颜色"
  Math: "数学"
  Simulate: "模拟"
  Interaction: "互动"
  Objects: "物件"
  Lights: "灯光"
  Motion: "Motion"
  Instance_Mode: "实例模式"
  Dom: "DOM"
  Drawing: "Drawing"
  Transform: "Transform"
  Typography: "Typography"
  3D: "3D"
  Input: "Input"
  Sound: "音频"
  Advanced_Data: "Advanced Data"
  Mobile: "移动设备"
  Hello_P5: "Hello p5"

contributors-conference:
  contributors-conference-title: "p5.js 贡献者会议"
  contributors-conference-date: "5月25日至31日"
  contributors-conference1: "30个来自各种不同背景的参与者聚集在一起并花了一个星期在"
  contributors-conference2: "提善 p5.js 编程环境的源代码、参考文献及社区外展工具。参与者来自香港、西雅图、洛杉矶、波士顿及纽约，多数都是在创意科技、互动设计及新媒体艺术的职业专家但另外也包括了数位来自 Carnegie Mellon’s Schools of Art and Architecture 的大学本科和研究生。"
  contributors-conference-participants-title: "参与者"
  contributors-conference-diversity-title: "多元平等"
  contributors-conference-diversity1: "在技术开发的同时，这次会议的另外一个主要焦点为推广、社群及多元平等。会议由一个小组会议开始"
  contributors-conference-diversity2: "Diversity: Seven Voices on Race, Gender, Ability &amp; Class for FLOSS and the Internet"
  contributors-conference-diversity3: "（多元平等：七个在种族、性别、能力及阶级的声音，给 FLOSS（免费与开源软件）及互联网）。"
  contributors-conference-diversity4: "举办者为"
  contributors-conference-diversity5: "及"
  contributors-conference-diversity6: "，"
  contributors-conference-diversity7: "该小组会议发生于2015年5月25日（星期二），地点在 Carnegie Mellon University 的 Kresge Auditorium。演说者包括"
  contributors-conference-diversity8: "及"
  contributors-conference-diversity9: "。"
  contributors-conference-support-title: "支持"
  contributors-conference-support1: "我们的贡献者会议地点位于"
  contributors-conference-support2: "在 Carnegie Mellon University 内，并为一个给非典型、抗学科及跨学院研究的学术实验室，研究重点为艺术、科技及文化的交接。"
  contributors-conference-support3: "这项活动资金来自于"
  contributors-conference-support4: "所提供的资助及来自以下赞助者的慷慨支持："
  contributors-conference-support5: "及"
  contributors-conference-support6: "谢谢！"

reference:
  Reference: "参考文献"

showcase:
  showcase-title: "Showcase"
  showcase-intro1: "Introducing Showcase, curated by " 
  showcase-intro2: "We're celebrating how people are using p5.js to make creative work, learning, and open source more interesting and inclusive. Together, we make community."
  showcase-intro3: "During Summer 2019, we asked a few creators to share more about how they've used p5.js. Nominate someone's p5.js work or your own to be featured here!"
  showcase-featuring: "Featuring"
  project-tag-art: "Art"
  project-tag-design: "Design"
  project-tag-code: "Code"
  project-tag-curriculum: "Curriculum"
  project-tag-documentation: "Documentation"
  project-tag-game: "Game"
  project-tag-library: "Library"
  project-tag-organizing: "Organizing"
  project-tag-tool: "Tool"
  project-tag-tutorial: "Tutorial"
  project-roni: "Programmed Plotter Drawings"
  credit-roni: "Roni Cantor"
  description-roni: "Sine waves and lerps generated in p5.js, exported as SVG, and drawn with a plotter and pens."
  project-phuong: "Airi Flies"
  credit-phuong: "Phuong Ngo"
  description-phuong: "In this game developed with p5.play, help Airi fly by saying PEW. Created to encourage people to get out of their comfort zone and feel more confident about themselves regardless of what they do and how they look or sound."
  project-daein: "Chillin'"
  credit-daein: "Dae In Chung"
  description-daein: "An interactive typographic poster that uses a mobile device's motion sensor with p5.js."
  project-qianqian: "Qtv"
  credit-qianqian: "Qianqian Ye"
  description-qianqian: "A video channel with 1-minute videos in Mandarin about creative coding, art, and technology, including p5.js tutorials for beginners. Available on YouTube, Instagram, Bilibili, and TikTok."
  project-casey-louise: "p5.js Shaders"
  credit-casey-louise: "Casey Conchinha, Louise Lessél"
  description-casey-louise: "A resource for learning the what, why, and how of using shaders in p5.js."
  project-moon-xin: "Moving Responsive Posters"
  credit-moon-xin: "Moon Jang, Xin Xin"
  description-moon-xin: "Browser-based moving posters that use graphical systems, transformation methods, and p5.js to address the connotations of a word less than 8 letters. Designed by students for a graphic design course (Visual Narrative Systems) at the University of Georgia."